# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Verify release

on:
  push:
    tags:
    - 'v*-rc0'

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: '0'
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.16

    - name: Restore dependency cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Set env vars
      run: |
        RC_VERSION=${GITHUB_REF#refs/tags/}
        echo VERSION=${RC_VERSION%-rc*} >> $GITHUB_ENV

    - name: Print env
      run: go env

    - name: Compile
      run: go build .

    - name: Unit test
      run: go test -v -count=1 -short -timeout=3m -vet=asmdecl,assign,atomic,bools,buildtag,cgocall,composites,copylocks,errorsas,httpresponse,loopclosure,lostcancel,nilfunc,printf,shift,stdmethods,structtag,tests,unmarshal,unreachable,unsafeptr,unusedresult ./...

    - name: Populate version number
      run: |
        echo "$VERSION" > pkg/version/version.txt
        sed -i~ "s/VERSION=.*/VERSION=$VERSION/" README.md

    - name: Create release branch
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git checkout -B release-${VERSION}
        git add README.md pkg/version/version.txt
        git commit -m "$VERSION"
        git push --force origin "release-$VERSION"
